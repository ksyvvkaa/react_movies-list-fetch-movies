{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/FindMovie/FindMovie.tsx","api.ts","App.tsx","index.tsx"],"names":["MovieCard","_ref","movie","_jsxs","className","children","_jsx","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","FindMovie","onAdd","_useState","useState","_useState2","_slicedToArray","searchQuery","setSearchQuery","_useState3","_useState4","setMovie","_useState5","_useState6","isLoading","setIsLoading","_useState7","_useState8","errorMessage","setErrorMessage","_Fragment","onSubmit","event","query","preventDefault","fetch","concat","then","res","json","catch","Response","Error","movieData","picture","Poster","Title","Plot","imdbID","getNormalizedMovie","finally","htmlFor","type","id","placeholder","cn","value","onChange","target","disabled","onClick","App","setMovies","newMovie","currentMovies","some","_toConsumableArray","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e834e593.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movieCard\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          data-cy=\"moviePoster\"\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\" data-cy=\"movieTitle\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\" data-cy=\"movieDescription\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl} data-cy=\"movieURL\">\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import React, { useState } from 'react';\nimport cn from 'classnames';\n\nimport './FindMovie.scss';\nimport { getMovie } from '../../api';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\nimport { MovieData } from '../../types/MovieData';\n\nfunction getNormalizedMovie(movieData: MovieData): Movie {\n  const picture = movieData.Poster === 'N/A'\n    ? 'https://via.placeholder.com/360x270.png?text=no%20preview'\n    : movieData.Poster;\n\n  return {\n    title: movieData.Title,\n    description: movieData.Plot,\n    imgUrl: picture,\n    imdbUrl: `https://www.imdb.com/title/${movieData.imdbID}`,\n    imdbId: movieData.imdbID,\n  };\n}\n\ninterface Props {\n  onAdd: (movie: Movie) => void;\n}\n\nexport const FindMovie: React.FC<Props> = ({ onAdd }) => {\n  const [searchQuery, setSearchQuery] = useState('');\n  const [movie, setMovie] = useState<Movie | null>(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [errorMessage, setErrorMessage] = useState<string | null>(null);\n\n  const handleQueryChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setErrorMessage(null);\n    setSearchQuery(event.target.value);\n  };\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n    setIsLoading(true);\n\n    getMovie(searchQuery)\n      .then((res) => {\n        if ('Error' in res) {\n          setErrorMessage(\"Can't find a movie with such a title\");\n        } else {\n          setMovie(getNormalizedMovie(res));\n        }\n      })\n      .finally(() => setIsLoading(false));\n  };\n\n  const handleAdd = () => {\n    if (movie) {\n      onAdd(movie);\n    }\n\n    setSearchQuery('');\n    setMovie(null);\n  };\n\n  return (\n    <>\n      <form\n        className=\"find-movie\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={cn('input', { 'is-danger': errorMessage })}\n              value={searchQuery}\n              onChange={handleQueryChange}\n            />\n          </div>\n\n          {errorMessage && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              {errorMessage}\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              className={cn('button is-light', { 'is-loading': isLoading })}\n              disabled={!searchQuery}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          {movie && (\n            <div className=\"control\">\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={handleAdd}\n              >\n                Add to the list\n              </button>\n            </div>\n          )}\n        </div>\n      </form>\n\n      {movie && (\n        <div className=\"container\" data-cy=\"previewContainer\">\n          <h2 className=\"title\">Preview</h2>\n\n          <MovieCard movie={movie} />\n        </div>\n      )}\n    </>\n  );\n};\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_URL = 'https://www.omdbapi.com/?apikey=b5aeca2f';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import { useState } from 'react';\n\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport type { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const addMovie = (newMovie: Movie) => {\n    setMovies(currentMovies => {\n      const isAlreadyAdded = currentMovies.some(\n        movie => movie.imdbId === newMovie.imdbId,\n      );\n\n      if (isAlreadyAdded) {\n        return currentMovies;\n      }\n\n      return [...currentMovies, newMovie];\n    });\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie\n          onAdd={addMovie}\n        />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}